// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © mirbyte
//@version=5
indicator("Magnificent 7", overlay = true, max_bars_back = 500)

// Colors
header_col = input.color(color.rgb(0, 0, 0), group = "Colors")
table_col = input.color(color.rgb(89, 125, 197), group = "Colors")
avg_col = input.color(color.rgb(89, 125, 197), group = "Colors")
// gray color.rgb(130, 130, 130, 1)
avg_pos = input.color(color.rgb(0, 0, 0, 1), group = "Colors")
avg_neg = input.color(color.rgb(0, 0, 0), group = "Colors")
text_col  = input.color(color.rgb(0, 0, 0), group = "Colors")
text_col_avg  = input.color(color.rgb(238, 238, 238), group = "Colors")
Htext_col  = input.color(color.white, group = "Colors")
positive_col = input.color(color.rgb(92, 133, 113, 1), group = "Colors")
negative_col = input.color(color.rgb(143, 88, 88), group = "Colors")
diff_text = input.color(color.rgb(234, 234, 234), group = "Colors")

// Create table
var tbl = table.new(position.bottom_right, 7, 15, frame_color=color.rgb(0, 0, 0), frame_width=1, border_width=1, border_color=color.rgb(31, 31, 31))

// Header
table.cell(tbl, 0, 0, "M0_BTC", bgcolor=header_col, text_color=color.rgb(130, 130, 130, 1), text_size=size.tiny)
table.cell(tbl, 1, 0, "12 Month", bgcolor=header_col, text_color=Htext_col, text_size=size.small)
table.cell(tbl, 2, 0, "3 Month", bgcolor=header_col, text_color=Htext_col, text_size=size.small)
table.cell(tbl, 3, 0, "1 Month", bgcolor=header_col, text_color=Htext_col, text_size=size.small)

// Ticker
ticker_1 = input("AAPL", group = "Ticker")
ticker_2 = input("GOOGL", group = "Ticker")
ticker_3 = input("MSFT", group = "Ticker")
ticker_4 = input("AMZN", group = "Ticker")
ticker_5 = input("META", group = "Ticker")
ticker_6 = input("TSLA", group = "Ticker")
ticker_7 = input("NVDA", group = "Ticker")
ticker_8 = input("US500", group = "Ticker")
ticker_9 = input("US2000", group = "Ticker")

table.cell(tbl, 0, 1, ticker_1, bgcolor=table_col, text_color=text_col, text_size=size.small)
table.cell(tbl, 0, 2, ticker_2, bgcolor=table_col, text_color=text_col, text_size=size.small)
table.cell(tbl, 0, 3, ticker_3, bgcolor=table_col, text_color=text_col, text_size=size.small)
table.cell(tbl, 0, 4, ticker_4, bgcolor=table_col, text_color=text_col, text_size=size.small)
table.cell(tbl, 0, 5, ticker_5, bgcolor=table_col, text_color=text_col, text_size=size.small)
table.cell(tbl, 0, 6, ticker_6, bgcolor=table_col, text_color=text_col, text_size=size.small)
table.cell(tbl, 0, 7, ticker_7, bgcolor=table_col, text_color=text_col, text_size=size.small)
table.cell(tbl, 0, 8, "M7 Avg", bgcolor=avg_col, text_color=text_col_avg, text_size=size.small)
table.cell(tbl, 0, 9, ticker_8, bgcolor=table_col, text_color=text_col, text_size=size.small)
table.cell(tbl, 0, 10, ticker_9, bgcolor=table_col, text_color=text_col, text_size=size.small)
table.cell(tbl, 0, 11, "US Avg", bgcolor=avg_col, text_color=text_col_avg, text_size=size.small)
table.cell(tbl, 0, 12, "Difference", bgcolor=avg_col, text_color=text_col_avg, text_size=size.small)

///Data///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL AAPL/
// latest price
aaD_close = request.security(ticker_1, "D", close)
// apple 1 YEAR
aaM_open = request.security(ticker_1, "D", open[252]) // 249
aaM_change = (aaD_close - aaM_open) / aaM_open
table.cell(tbl, 1, 1, str.tostring(aaM_change * 100, format.percent), bgcolor = aaM_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
// apple 3 MONTH
aaY_open = request.security(ticker_1, "D", open[63])
aaY_change = (aaD_close - aaY_open) / aaY_open
table.cell(tbl, 2, 1, str.tostring(aaY_change * 100, format.percent), bgcolor = aaY_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
// apple 1 MONTH
aa3_open = request.security(ticker_1, "D", open[20])
aa3_change = (aaD_close - aa3_open) / aa3_open
table.cell(tbl, 3, 1, str.tostring(aa3_change * 100, format.percent), bgcolor = aa3_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)

// And same for every ticker ->
// GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL GOOGL /
glD_close = request.security(ticker_2, "D", close)
glM_open = request.security(ticker_2, "D", open[252])
glM_change = (glD_close - glM_open) / glM_open
table.cell(tbl, 1, 2, str.tostring(glM_change * 100, format.percent), bgcolor = glM_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
glY_open = request.security(ticker_2, "D", open[63])
glY_change = (glD_close - glY_open) / glY_open
table.cell(tbl, 2, 2, str.tostring(glY_change * 100, format.percent), bgcolor = glY_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
gl3_open = request.security(ticker_2, "D", open[20])
gl3_change = (glD_close - gl3_open) / gl3_open
table.cell(tbl, 3, 2, str.tostring(gl3_change * 100, format.percent), bgcolor = gl3_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)

// MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT MSFT /
msD_close = request.security(ticker_3, "D", close)
msM_open = request.security(ticker_3, "D", open[252])
msM_change = (msD_close - msM_open) / msM_open
table.cell(tbl, 1, 3, str.tostring(msM_change * 100, format.percent), bgcolor = msM_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
msY_open = request.security(ticker_3, "D", open[63])
msY_change = (msD_close - msY_open) / msY_open
table.cell(tbl, 2, 3, str.tostring(msY_change * 100, format.percent), bgcolor = msY_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
ms3_open = request.security(ticker_3, "D", open[20])
ms3_change = (msD_close - ms3_open) / ms3_open
table.cell(tbl, 3, 3, str.tostring(ms3_change * 100, format.percent), bgcolor = ms3_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)

// AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN AMZN  /
amD_close = request.security(ticker_4, "D", close)
amM_open = request.security(ticker_4, "D", open[252])
amM_change = (amD_close - amM_open) / amM_open
table.cell(tbl, 1, 4, str.tostring(amM_change * 100, format.percent), bgcolor = amM_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
amY_open = request.security(ticker_4, "D", open[63])
amY_change = (amD_close - amY_open) / amY_open
table.cell(tbl, 2, 4, str.tostring(amY_change * 100, format.percent), bgcolor = amY_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
am3_open = request.security(ticker_4, "D", open[20])
am3_change = (amD_close - am3_open) / am3_open
table.cell(tbl, 3, 4, str.tostring(am3_change * 100, format.percent), bgcolor = am3_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)

// META META META META META META META META META META META META META META META META META META META META META META META META META META META META META META META META META META META META META  /
meD_close = request.security(ticker_5, "D", close)
meM_open = request.security(ticker_5, "D", open[252])
meM_change = (meD_close - meM_open) / meM_open
table.cell(tbl, 1, 5, str.tostring(meM_change * 100, format.percent), bgcolor = meM_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
meY_open = request.security(ticker_5, "D", open[63])
meY_change = (meD_close - meY_open) / meY_open
table.cell(tbl, 2, 5, str.tostring(meY_change * 100, format.percent), bgcolor = meY_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
me3_open = request.security(ticker_5, "D", open[20])
me3_change = (meD_close - me3_open) / me3_open
table.cell(tbl, 3, 5, str.tostring(me3_change * 100, format.percent), bgcolor = me3_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)

// TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA TSLA /
tsD_close = request.security(ticker_6, "D", close)
tsM_open = request.security(ticker_6, "D", open[252])
tsM_change = (tsD_close - tsM_open) / tsM_open
table.cell(tbl, 1, 6, str.tostring(tsM_change * 100, format.percent), bgcolor = tsM_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
tsY_open = request.security(ticker_6, "D", open[63])
tsY_change = (tsD_close - tsY_open) / tsY_open
table.cell(tbl, 2, 6, str.tostring(tsY_change * 100, format.percent), bgcolor = tsY_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
ts3_open = request.security(ticker_6, "D", open[20])
ts3_change = (tsD_close - ts3_open) / ts3_open
table.cell(tbl, 3, 6, str.tostring(ts3_change * 100, format.percent), bgcolor = ts3_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)

// NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA NVDA /
nvD_close = request.security(ticker_7, "D", close)
nvM_open = request.security(ticker_7, "D", open[252])
nvM_change = (nvD_close - nvM_open) / nvM_open
table.cell(tbl, 1, 7, str.tostring(nvM_change * 100, format.percent), bgcolor = nvM_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
nvY_open = request.security(ticker_7, "D", open[63])
nvY_change = (nvD_close - nvY_open) / nvY_open
table.cell(tbl, 2, 7, str.tostring(nvY_change * 100, format.percent), bgcolor = nvY_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
nv3_open = request.security(ticker_7, "D", open[20])
nv3_change = (nvD_close - nv3_open) / nv3_open
table.cell(tbl, 3, 7, str.tostring(nv3_change * 100, format.percent), bgcolor = nv3_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)

// US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 US30 /
usD_close = request.security(ticker_8, "D", close)
usM_open = request.security(ticker_8, "D", open[252])
usM_change = (usD_close - usM_open) / usM_open
table.cell(tbl, 1, 9, str.tostring(usM_change * 100, format.percent), bgcolor = usM_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
usY_open = request.security(ticker_8, "D", open[63])
usY_change = (usD_close - usY_open) / usY_open
table.cell(tbl, 2, 9, str.tostring(usY_change * 100, format.percent), bgcolor = usY_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
us3_open = request.security(ticker_8, "D", open[20])
us3_change = (usD_close - us3_open) / us3_open
table.cell(tbl, 3, 9, str.tostring(us3_change * 100, format.percent), bgcolor = us3_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)

// SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 SP500 /
spD_close = request.security(ticker_9, "D", close)
spM_open = request.security(ticker_9, "D", open[252])
spM_change = (spD_close - spM_open) / spM_open
table.cell(tbl, 1, 10, str.tostring(spM_change * 100, format.percent), bgcolor = spM_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
spY_open = request.security(ticker_9, "D", open[63])
spY_change = (spD_close - spY_open) / spY_open
table.cell(tbl, 2, 10, str.tostring(spY_change * 100, format.percent), bgcolor = spY_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)
sp3_open = request.security(ticker_9, "D", open[20])
sp3_change = (spD_close - sp3_open) / sp3_open
table.cell(tbl, 3, 10, str.tostring(sp3_change * 100, format.percent), bgcolor = sp3_change >= 0 ? positive_col : negative_col, text_color = text_col, text_size = size.small)


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE AVERAGE /
// Calculations
pos_text = color.green
neg_text = color.red

m7_avg_3month = (sp3_change + us3_change + nv3_change + ts3_change + me3_change + am3_change + ms3_change + gl3_change + aa3_change) / 7
m7_avg_12month = (spY_change + usY_change + nvY_change + tsY_change + meY_change + amY_change + msY_change + glY_change + aaY_change) / 7
m7_avg_3year = (spM_change + usM_change + nvM_change + tsM_change + meM_change + amM_change + msM_change + glM_change + aaM_change) / 7

table.cell(tbl, 3, 8, str.tostring(m7_avg_3month * 100, format.percent), bgcolor = avg_neg, text_color = m7_avg_3month >= 0 ? pos_text : neg_text, text_size = size.normal)
table.cell(tbl, 2, 8, str.tostring(m7_avg_12month * 100, format.percent), bgcolor = avg_neg, text_color = m7_avg_12month >= 0 ? pos_text : neg_text, text_size = size.normal)
table.cell(tbl, 1, 8, str.tostring(m7_avg_3year * 100, format.percent), bgcolor = avg_neg, text_color = m7_avg_3year >= 0 ? pos_text : neg_text, text_size = size.normal)

US_avg_3month = (sp3_change + us3_change) / 2
US_avg_12month = (spY_change + usY_change) / 2
US_avg_3year = (spM_change + usM_change) / 2

table.cell(tbl, 3, 11, str.tostring(US_avg_3month * 100, format.percent), bgcolor = avg_neg, text_color = US_avg_3month >= 0 ? pos_text : neg_text, text_size = size.normal)
table.cell(tbl, 2, 11, str.tostring(US_avg_12month * 100, format.percent), bgcolor = avg_neg, text_color = US_avg_12month >= 0 ? pos_text : neg_text, text_size = size.normal)
table.cell(tbl, 1, 11, str.tostring(US_avg_3year * 100, format.percent), bgcolor = avg_neg, text_color = US_avg_3year >= 0 ? pos_text : neg_text, text_size = size.normal)

diff_3 = math.abs(US_avg_3month - m7_avg_3month)
diff_12 = math.abs(US_avg_12month - m7_avg_12month)
diff_Y = math.abs(US_avg_3year - m7_avg_3year)

table.cell(tbl, 3, 12, str.tostring(diff_3 * 100, format.percent), bgcolor = avg_neg, text_color = diff_text, text_size = size.normal)
table.cell(tbl, 2, 12, str.tostring(diff_12 * 100, format.percent), bgcolor = avg_neg, text_color = diff_text, text_size = size.normal)
table.cell(tbl, 1, 12, str.tostring(diff_Y * 100, format.percent), bgcolor = avg_neg, text_color = diff_text, text_size = size.normal)

// ❤️